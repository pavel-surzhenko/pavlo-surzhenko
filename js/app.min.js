//-----------------Preload------------------------------
window.onload = function () {
  document.body.classList.add('loaded_hiding');
  window.setTimeout(function () {
      document.body.classList.add('loaded');
      document.body.classList.remove('loaded_hiding');
  }, 500);
}
const typeText = document.querySelector('.introduction__body-content-title');
window.addEventListener("load", function(event) {
  typeText.classList.add('typetext')
});

//----------------Menu Burger----------------------------
const iconMenu = document.querySelector('.menu__icon');
const menuBody = document.querySelector('.menu__body')
if (iconMenu) {
  iconMenu.addEventListener("click", function(e) {
      document.body.classList.toggle('lock')
      iconMenu.classList.toggle('_active');
      menuBody.classList.toggle('_active');
  })
}
//----------------------smooth scroll---------------------
const menuLinks = document.querySelectorAll('.menu__link[data-goto]');
if (menuLinks.length > 0) {
  menuLinks.forEach(menuLink => {
      menuLink.addEventListener("click", onMenuLinkClick);
  });

  function onMenuLinkClick(e) {
      const menuLink = e.target;
      if(menuLink.dataset.goto && document.querySelector(menuLink.dataset.goto)) {
          const gotoBlock = document.querySelector(menuLink.dataset.goto);
          const gotoBlockValue = gotoBlock.getBoundingClientRect().top + pageYOffset; //- document.querySelector('header').offsetHeight; if header fixed

          if(iconMenu.classList.contains('_active')) { //close menu on click
              document.body.classList.remove('lock')
              iconMenu.classList.remove('_active');
              menuBody.classList.remove('_active');
          }

          window.scrollTo({
              top: gotoBlockValue,
              behavior: "smooth"
          });
          e.preventDefault();
      }
  }
}
//----------------------animate------------------------
const animItems = document.querySelectorAll('.anim-items');
  if(animItems.length > 0) {
      window.addEventListener('scroll', animonSroll);
      function animonSroll(params) {
          for (let index = 0; index < animItems.length; index++) {
              const animItem = animItems[index];
              const animItemHeight = animItem.offsetHeight;
              const animItemOffset = offset(animItem).top;
              const animStart = 4;

              let animItemPoint = window.innerHeight - animItemHeight / animStart;
              if(animItemHeight > window.innerHeight) {
                  animItemPoint = window.innerHeight - window.innerHeight / animStart;
              }
              if((pageYOffset > animItemOffset - animItemPoint) && pageYOffset < (animItemOffset + animItemHeight)) {
                  animItem.classList.add('_anim');
              }
          }
      }
      function offset(el) {
          const rect = el.getBoundingClientRect(),
          srollLeft = window.pageXOffset || document.documentElement.scrollLeft,
          srollTop = window.pageYOffset || document.documentElement.scrollTop;
          return {top: rect.top + srollTop, left: rect.left + srollLeft}
      }
      setTimeout(() => {
          animonSroll();
      }, 400);
      
  }

//---------------------header scroll---------------------
let lastScroll = 0;
const defaultOffset = 200;
const header = document.querySelector('.header');

const scrollPosition = () => window.pageYOffset || document.documentElement.scrollTop;
const containHide = () => header.classList.contains('hide');

window.addEventListener('scroll', () => {
  if(scrollPosition() > lastScroll && !containHide() && scrollPosition() > defaultOffset) {
      //scroll down
      header.classList.add('hide');
  }
  else if(scrollPosition() < lastScroll && containHide()){
      //scroll up
      header.classList.remove('hide');
      header.classList.add('bc')
  }

  lastScroll = scrollPosition();
})
//---------------------------form--------------------
const form = document.forms["form"];
const formArr = Array.from(form);
const validFormArr = [];
const button = form.elements["button"];

formArr.forEach((el) => {
  if (el.hasAttribute("data-reg")) {
    el.setAttribute("is-valid", "0");
    validFormArr.push(el);
  }
});

form.addEventListener("input", inputHandler);
form.addEventListener("submit", formCheck);

function inputHandler({ target }) {
  if (target.hasAttribute("data-reg")) {
    inputCheck(target);
  }
}

function inputCheck(el) {
  const inputValue = el.value;
  const inputReg = el.getAttribute("data-reg");
  const reg = new RegExp(inputReg);
  if (reg.test(inputValue)) {
    el.setAttribute("is-valid", "1");
    el.style.border = "2px solid #9DCA44";
    el.classList.remove('_error');
  } else {
    el.setAttribute("is-valid", "0");
    el.classList.add('_error');
    el.style.border = "2px solid #FF0000";
  }
}

function formCheck(e) {
  e.preventDefault();
  const allValid = [];
  validFormArr.forEach((el) => {
    allValid.push(el.getAttribute("is-valid"));
  });
  const isAllValid = allValid.reduce((acc, current) => {
    return acc && current;
  });
  if (!Boolean(Number(isAllValid))) {
    alert("Please, write correct information");
    return;
  }
  formSubmit();
}

async function formSubmit() {
  const data = serializeForm(form);
  const response = await sendData(data);
  if (response.ok) {
    let result = await response.json();
    alert(result.message);
    formReset();
  } else {
    alert("Error: " + response.status);
  }
}

function serializeForm(formNode) {
  return new FormData(form);
}

async function sendData(data) {
  return await fetch("send_mail.php", {
    method: "POST",
    body: data,
  });
}
function formReset() {
  form.reset();
  validFormArr.forEach((el) => {
    el.setAttribute("is-valid", 0);
    el.style.border = "1px solid #3f403b";
  });
}